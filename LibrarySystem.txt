#define _CRT_SECURE_NO_WARNINGS
#define bool int
#define false 0
#define true (!false)
#define SIZE 10

//Libraries
#include <stdio.h>
#include <stdlib.h>
#include <string.h>



//Structure template for a book
struct book {
	char id[10];
	char name[20];
	char author[20];
	int year;
	bool loaned;
	char customer[20];
	int loanTimes;
};

//Stucture template for one node
struct LinearNode {
	struct book *element;
	struct LinearNode *next;
};

// Function prototypes
void addBook();  //adding nodes to end of the list
void deleteBook();
bool isEmpty();
void viewOneBook();
void viewAllBooks();
void displayBook(struct LinearNode *);



// Global Variables
struct LinearNode *front = NULL;
struct LinearNode *last = NULL;
int numOfBooks = 0;

/**************MAIN FUNCTION*******************/
int main() {
	//create Menu

	int option = 0;
	printf("--------Welcome to the library--------\n\n");
	printf("1. Add a new book to the library\n");
	printf("2. Allow customer to take out a book\n");
	printf("3. Allow customer to return a book\n");
	printf("4. Delete an old book from stock\n");
	printf("5. View all books\n");
	printf("6. View a specific book\n");
	printf("7. View details of most popular and least popular books\n");
	printf("8. This should be an appropriate option that you provide\n");//special feature
	printf("9. Exit the system\n\n");

	do {
		printf("\n\nPLEASE ENTER IN YOUR CHOSEN MENU OPTION: ");
		scanf("%d", &option);

		do {
			if (option > 9 || option <= 0)
				printf("ERROR option must be between 1-9\n\n");
		} while (option > 9 || option <= 0);


		if (option == 1) {
			if (numOfBooks != SIZE)
				addBook();
			else
				printf("Sorry library is now full, please choose a different option!");
		}
		else if (option == 2) {

		}
		else if (option == 3) {

		}
		else if (option == 4) {
			deleteBook();
		}
		else if (option == 5) {
			viewAllBooks();
		}
		else if (option == 6) {
			viewOneBook();

		}
		else if (option == 7) {

		}
		else if (option == 8) {

		}
	} while (option < 9);

	getchar();
	getchar();
}

void addBook() {

	struct LinearNode *aNode;
	struct book *anElement;

	anElement = (struct book*)malloc(sizeof(struct book));

	if (anElement == NULL)
		printf("Error - no space for the new element\n");
	else
	{
		//Input value into the data part
		printf("\nPlease enter in all data of the book you wish to add to the library:\n\n");
		printf("Enter in book id:");
		scanf("%s", anElement->id);
		printf("Enter in book name:");
		scanf("%s", anElement->name);
		printf("Enter in book author:");
		scanf("%s", anElement->author);
		printf("Enter in book year of publication:");
		scanf("%d", &anElement->year);
		strcpy(anElement->customer, " ");
		anElement->loanTimes = 0;
		anElement->loaned = 0;

		// create space for new node that will contain data
		aNode = (struct LinearNode *)malloc(sizeof(struct LinearNode));

		if (aNode == NULL)
			printf("Error - no space for the new node\n");
		else { // add data part to the node
			aNode->element = anElement;
			aNode->next = NULL;

			//add node to end of the list
			if (isEmpty())
			{
				front = aNode;
				last = aNode;
			}
			else {
				last->next = aNode;
				last = aNode;
			} //end else
			numOfBooks++;
		}//end else
	}//end else
	printf("num of books in library %d", numOfBooks);
} //end addNodes



void deleteBook() {
	struct LinearNode *current, *previous;
	bool notFound = true;
	char bookId[20];

	printf("\n\nPlease enter the ID of the book you wish to delete:");
	scanf("%s", bookId);


	printf("\n");
	if (isEmpty())
		printf("Error - there are no books in the library\n");
	else {
		current = previous = front;

		while (notFound && current != NULL) {
			if (strcmp(bookId, current->element->id) == 0)
				notFound = false;
		}
		if (notFound) {
			printf("Error - there are no books with the ID %s\n", bookId);
		}
		else if (current == front) { //delete first book
			front = front->next;
			free(current);
		} //end else
		else if (strcmp(bookId, current->element->id) == 0) {//delete last book
			free(current);
			previous->next = NULL;
			last = previous;
		}
		else {//delete book in middle of list
			previous->next = current->next;
			free(current);
		} //end else
		printf("Book with ID %s has been deleted\n", bookId);
		numOfBooks--;
	}//end else
}// end deleteNode

void viewAllBooks() {
	struct LinearNode *current;
	printf("\n");
	if (isEmpty())
		printf("Error - there are no books in the library\n");
	else {
		current = front;
		while (current != NULL) {
			printf("Displaying details of book with ID %s", current->element->id);
			displayBook(current);
			current = current->next;
		} //end while
	}//end else
} //end viewAllBooks

void viewOneBook() {
	char bookId[20];
	struct LinearNode *current;
	int f = 0;

	printf("\n");
	if (isEmpty())
		printf("Error - there are no books in the library\n");
	else {
		current = front;
		printf("Please enter in the ID of the book you wish to view its details:");
		scanf("%s", bookId);
		while ((current != NULL) && (f == 0)) {
			if (strcmp(bookId, current->element->id) == 0) {
				printf("Displaying details of book with ID %s", current->element->id);
				displayBook(current);
				f = 100;
			}
			else
				current = current->next;
		}
	}//end else
}




void displayBook(struct LinearNode *current) {

	printf("\nBook title: %s", current->element->name);
	printf("\nAuthor: %s", current->element->author);
	printf("\nYear of publication: %d", current->element->year);
	if (current->element->loaned == 1)
		printf("\nBook is out on loan");
	else if (current->element->loaned == 0)
		printf("\nBook is not out on loan");
	printf("\nLoan Times: %d \n\n\n", current->element->loanTimes);
}

bool isEmpty() {
	if (front == NULL)
		return true;
	else
		return false;
}